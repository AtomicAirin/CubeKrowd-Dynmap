name: TEST Dynmap to Drive

on:
  workflow_dispatch:

jobs:
  update-dynmap-images:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install dynmap_lens google-auth google-auth-oauthlib google-api-python-client

    - name: Create or clear assets directory
      run: |
        mkdir -p assets
        rm -f assets/*

    - name: Capture cr spawn
      run: |
        timestamp=$(date +"%Y-%m-%d-%H-%M-%S")
        dynmap-lens.py -v https://dynmap.cubekrowd.net/ creative surface [-200,64,-250] [60,60] 2 assets/Surface_2_60.png
        dynmap-lens.py -v https://dynmap.cubekrowd.net/ creative surface [-400,64,-500] [30,30] 3 assets/Surface_3_30.png

    - name: Upload to Google Drive
      env:
        GDRIVE_KEY: ${{ secrets.GDRIVE_SERVICE_ACCOUNT }}
      run: |
        echo "$GDRIVE_KEY" > /tmp/service_account.json

        python <<EOF
        import os
        from google.oauth2.service_account import Credentials
        from googleapiclient.discovery import build
        from googleapiclient.http import MediaFileUpload

        # Authenticate with the service account
        credentials = Credentials.from_service_account_file('/tmp/service_account.json')
        drive_service = build('drive', 'v3', credentials=credentials)

        # Define the folder ID (replace with your folder ID)
        folder_id = "1cbUN2hhnB7euzZ3HmVcUjXq-Ve4pT6rV"

        # Upload files
        for filename in os.listdir('assets'):
            file_metadata = {'name': filename, 'parents': [folder_id]}
            media = MediaFileUpload(f'assets/{filename}', mimetype='image/png')
            drive_service.files().create(body=file_metadata, media_body=media, fields='id').execute()
        EOF
